'''
******************** GitHub ************************                                                 **   https://github.com/Apex-tex/Tech2Give_Repo    **                                                 ****************************************************'''

'''1.Design a function that reverses the digits of an integer. For example, 50 should become 5 and -12 should become -21'''

def reverse(num):
    #Check if the number is negative
    is_negative = num < 0
    #Convert the integer to a string
    str_num = str(abs(num))
    #Reverse the string
    reversed_str = str_num[::-1]
    #Convert the reversed string back to integer
    reversed_num = int(reversed_str)
    
    if is_negative:
        reversed_num = -reversed_num
    
    return reversed_num

#Function Call
print(reverse(50))
print(reverse(-12))


'''2.Write a recursive function to calculate the factorial of a number'''

def factorial(num):
    if num == 0:
        return 1
    else:
        return num * factorial(num - 1)

#Function Call
print(factorial(5))


'''3.Design a function that takes a string or sequence of characters as input and returns the character that appears most frequently.//Eg 11189 => '1'
, //hello => l'''

def character_Mode(string):
    #Storw characters frequency in a dict
    frequency = {}
    
    for char in string:
        if char in frequency:
            frequency[char] += 1
        else:
            frequency[char] = 1
    
    #Find the Mode
    Mode = max(frequency, key=frequency.get)
    
    return Mode

#Function Call
print(character_Mode("Technology"))


'''4.Design a function that determines whether a given string is a pangram. A pangram is a sentence or phrase containing every letter of the alphabet at least once. Punctuation and case are typically ignored.For example, the
 string "The quick brown fox jumps over the lazy dog" is a pangram, while

"Hello, world!" is not.'''

def pangram(string):
    #Convert to lowercase for easier traversal
    string = string.lower()
    
    #Set to store unique characters 
    characters_set = set()
    
    #Is the character a letter? 
    for char in string:
        if char.isalpha():
            characters_set.add(char)
    
    if len(characters_set) == 26:
        print(f'String is a Pangram. It has {len(characters_set)} unique characters.')
    else:
        print(f'String is NOT a Pangram. It has {len(characters_set)} unique characters.')

#Function Call 
print(pangram("The quick brown fox jumps over the lazy dog"))
print(pangram("Do you enjoy software development"))


'''5.Design a function that takes a list of integers as input. The function should return True if the list contains two consecutive threes (3 next to a 3) anywhere within the list. Otherwise, it should return False.For example, the function

should return True for [1, 3, 3] and False for [1, 3, 1, 3].'''

def consecutive(numbers):
    #Iterate the list of characters 
    for i in range(len(numbers) - 1):
        if numbers[i] == 3 and numbers[i + 1] == 3:
            return True
    return False #else

#Function Call 
print(consecutive([1, 3, 1, 3]))
print(consecutive([1, 3, 3]))


'''6.Master Yoda, a renowned Jedi Master from the Star Wars universe, is known for his unique way of speaking. He often reverses the order of words in his
sentences.For example, instead of saying "I am home" he might say "Home am I"Design a function that takes a sentence as input and returns a new

sentence with the words reversed in the same order that Master Yoda would use.'''

def reverse_sentence(sentence):
    #Split the sentence into words
    words = sentence.split()
    #Reverse the order of words
    reversed_words = words[::-1]
    #Join the reversed words into a new sentence
    reverse = ' '.join(reversed_words)
    
    return reverse

#Function Call
print(reverse_sentence("I am Home"))
